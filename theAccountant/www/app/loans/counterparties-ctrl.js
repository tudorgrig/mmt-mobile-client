(function () {
	'use strict';

	angular.module('theAccountant').controller('counterpartiesCtrl', ['$filter','$timeout', '$ionicPopup', '$rootScope', '$state', '$window', 'counterpartiesApi', 'loanApi', counterpartiesCtrl]);

	function counterpartiesCtrl($filter, $timeout, $ionicPopup, $rootScope, $state, $window, counterpartiesApi, loanApi) {
		var vm = this;

    vm.counterparties = [];
    vm.defaultCurrency = $window.localStorage['defaultCurrency'];

    vm.findAllCounterparties = function () {
    	 counterpartiesApi.getAllCounterparties(function (data) {
    			vm.counterparties = data;
    	 })
    };

    vm.resolveTotalValue = function(counterparty){
      if(counterparty.total > 0){
        return "You lent ";
      }
      else {
        return "You owe ";
      }
    };

    vm.resolveTotalValueForEmail = function(counterparty){
          if(counterparty.total > 0){
            return "You owe me ";
          }
          else {
            return "I owe you";
          }
    };

    vm.resolveColour = function(counterparty){
      if(counterparty.total < 0){
        return "red";
      }
      return "green";
    };

    vm.resolveIconColour = function(counterparty){
      if(counterparty.total < 0){
        return "assertive";
      }
      return "balanced";
    };

    vm.showLoansPage = function(counterparty){
      $state.go('app.counterparty-loans', {
        id: counterparty.id,
        name: counterparty.name,
        email: counterparty.email
      });
    };

    vm.sendEmail = function(counterparty){
      loanApi.getLoansByCounterparty(counterparty.id, function (data) {
         var loans = $filter('orderBy')(data, 'active');
         var report = "Hi " + counterparty.name +",%0A%0A";
         var total = counterparty.total > 0 ? counterparty.total : counterparty.total * -1;
         report = report + vm.resolveTotalValueForEmail(counterparty) + " " + total + vm.defaultCurrency + "%0A";
         var report = report + "These are our loans until now:%0A%0A";
         angular.forEach(loans, function(value, key){
              report = report + key + " : " + vm.resolveLoanReport(value) +"%0A";
         });

         report = report + "%0AReport generated by TheAccountant app: https://play.google.com/store/apps/details?id=com.ionicframework.mymoneytracker%0A";
         report = report + "https://www.theacctnt.com%0A";
         var mail = "mailto:"+counterparty.email+"?subject=Our loan report" +"&body="+report;
         $window.open(mail);

      })
    };

    vm.resolveLoanReport = function(loan){
      var report = "Loan active = " + loan.active + ". %0A";
      var direction = loan.receiving;
      if(direction == true){
        report = report + "You owe me " + loan.amount + " " + loan.currency;
      }else {
        report = report + "I owe you " + loan.amount + " " + loan.currency + ". ";
      }
      report = report + "%0ALoan due on " +
        $filter('date')(new Date(loan.untilDate),'dd-MM-yyyy') + "%0A";
      report = report + "Description = " + loan.description + "%0A";
      return report;
    };

    vm.update = function (counterparty, index) {
    	$state.go('app.counterparty-edit', {
    		id : counterparty.id,
    		name : counterparty.name,
    		email : counterparty.email,
    		index : index
    	});
    };

    vm.confirmDelete = function (counterparty, index) {
    			var myPopup = $ionicPopup.show({
    					title : 'Confirm delete',
    					subTitle : 'Are you sure you want to delete this counterparty?',
    					buttons : [{
    							text : 'Cancel',
    							type : 'button-dark'
    						}, {
    							text : '<b>Delete</b>',
    							type : 'button-assertive',
    							onTap : function (e) {
    								counterpartiesApi.deleteCounterparty(counterparty, function (data) {
    									vm.counterparties.splice(vm.counterparties.indexOf(counterparty), 1);
    								});
    							}
    						}
    					]
    				});
    };

    /**
     * Initialize controller data
     */
    vm.initController = function() {
      if ($rootScope.licencePaymentApproved == null) {
        $timeout(vm.initController, 500);
      } else if ($rootScope.licencePaymentApproved === false) {
        var myPopup = $ionicPopup.show({
          title : '<i class="ion-locked"></i> Locked',
          subTitle : 'Loans, Notifications and Category limit are only available for contributors. In order to be able to use this functions you can ' +
          'contribute to the application accessing PAYMENT page. Thank you!',
          buttons : [
            {
              text : '<i class="ion-locked"></i> Unlock loans',
              type : 'button-small button-positive',
              onTap : function (e) {
                $state.go('app.payment');
              }
            },{
              text : '<i class="ion-home"></i> Home page',
              type : 'button-small button-positive',
              onTap : function (e) {
                $state.go('app.expenses');
              }
            }
          ]
        });
      } else {
        vm.findAllCounterparties();
      }
    };
    vm.initController();

	};
})();
